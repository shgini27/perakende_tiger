/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biz.rowana.view;

import biz.rowana.controller.DbConnection;
import biz.rowana.model.ResultTableModel;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import javax.swing.BorderFactory;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;

/**
 *
 * @author Shagy
 */
public class PriceWindow extends javax.swing.JFrame {
    private final String GREEN = "0x80CC33";
    private final String RED = "0xFF0000";
    private final int SEARCH_FIELD_LIMIT = 60;
    
    Connection connection;
    ResultSet rs;
    DbConnection db = new DbConnection();
    String tableNameCode = "LG_002_";

    /**
     * Creates new form PriceWindow
     */
    public PriceWindow() {
        initComponents();
    }
    
    public PriceWindow(Connection connection){
        this.connection = connection;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        priceSearchPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        barcodeSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        priceTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Bahalar");
        setType(java.awt.Window.Type.UTILITY);

        jLabel1.setText("Harydy Gözle");

        searchTextField.setDocument(new JTextFieldLimit(SEARCH_FIELD_LIMIT));
        searchTextField.setBorder(BorderFactory.createLineBorder(Color.decode(GREEN)));
        searchTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                searchByOne();
                if (priceTable.getRowCount() <= 0) {
                    searchTextField.setBorder(BorderFactory.createLineBorder(
                        Color.decode(RED)));
                SwingUtilities.invokeLater(() -> {
                    searchTextField.setText(searchTextField.getText().substring(0,
                        searchTextField.getText().length() - 1));
                searchTextField.setBorder(BorderFactory
                    .createLineBorder(Color.decode(GREEN)));
            });
        }
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        searchByOne();
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        searchByOne();
    }
    });
    searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            searchTextFieldKeyPressed(evt);
        }
    });

    jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jLabel2.setForeground(new java.awt.Color(153, 153, 153));
    jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel2.setText("Harydyň Bahasyny Gözlemek");

    jLabel3.setText("Barkody");

    /*barcodeSearch.setDocument(new JTextFieldLimit(SEARCH_FIELD_LIMIT));
    barcodeSearch.setBorder(BorderFactory.createLineBorder(Color.decode(GREEN)));
    barcodeSearch.getDocument().addDocumentListener(new DocumentListener() {
        @Override
        public void insertUpdate(DocumentEvent e) {
            searchByOne2();
            if (priceTable.getRowCount() <= 0) {
                barcodeSearch.setBorder(BorderFactory.createLineBorder(
                    Color.decode(RED)));
            SwingUtilities.invokeLater(() -> {
                barcodeSearch.setText("");
                barcodeSearch.setBorder(BorderFactory
                    .createLineBorder(Color.decode(GREEN)));
            });
        }
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        searchByOne2();
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        searchByOne2();
    }
    });*/
    barcodeSearch.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            barcodeSearchKeyPressed(evt);
        }
    });

    javax.swing.GroupLayout priceSearchPanelLayout = new javax.swing.GroupLayout(priceSearchPanel);
    priceSearchPanel.setLayout(priceSearchPanelLayout);
    priceSearchPanelLayout.setHorizontalGroup(
        priceSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(priceSearchPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(priceSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                .addGroup(priceSearchPanelLayout.createSequentialGroup()
                    .addGroup(priceSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(priceSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(searchTextField)
                        .addComponent(barcodeSearch))))
            .addContainerGap())
    );
    priceSearchPanelLayout.setVerticalGroup(
        priceSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(priceSearchPanelLayout.createSequentialGroup()
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(priceSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addComponent(barcodeSearch))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(priceSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
    );

    priceTable.setAutoCreateRowSorter(true);
    priceTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "Haryt Kody", "Haryt Ady", "Bahasy", "Barkody"
        }
    ));
    priceTable.setEnabled(false);
    priceTable.getColumn(priceTable.getColumnName(0)).setPreferredWidth(200);
    jScrollPane1.setViewportView(priceTable);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(priceSearchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jScrollPane1)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(priceSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void barcodeSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_barcodeSearchKeyPressed
        if(evt.getKeyCode() == 27){
            dispose();
        }
        
        if(evt.getKeyCode() == 10){
            searchByOne2();
            barcodeSearch.setText("");
        }
    }//GEN-LAST:event_barcodeSearchKeyPressed

    private void searchTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyPressed
        if(evt.getKeyCode() == 27){
            dispose();
        }
    }//GEN-LAST:event_searchTextFieldKeyPressed

    /**
     * Method to set the fiyat table with values.
     *
     * @param connection connection to database.
     */
    
    
    //method to search product
    private void searchByOne() {
        if (!searchTextField.getText().equals("")) {
            rs = db.getPrice(connection, searchTextField.getText().trim());
            priceTable.setModel(new ResultTableModel(rs));
        }
    }
    
    //method to search product
    private void searchByOne2() {
        if (!barcodeSearch.getText().equals("") || !barcodeSearch.getText().trim().isEmpty()) {
            rs = db.getPriceByBarcode(connection, barcodeSearch.getText().trim());
            priceTable.setModel(new ResultTableModel(rs));
        }
    }
    
    /**
     * Class to give the limit for textFiled.
     *
     * @param limit the textFieldLimit.
     */
    private class JTextFieldLimit extends PlainDocument {

        private final int limit;

        JTextFieldLimit(int limit) {
            super();
            this.limit = limit;
        }

        @Override
        public void insertString(int offset, String str, AttributeSet attr)
                throws BadLocationException {

            if (str == null) {
                return;
            }

            if ((getLength() + str.length()) <= limit) {
                super.insertString(offset, str, attr);
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PriceWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PriceWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PriceWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PriceWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PriceWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField barcodeSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel priceSearchPanel;
    private javax.swing.JTable priceTable;
    private javax.swing.JTextField searchTextField;
    // End of variables declaration//GEN-END:variables
}
